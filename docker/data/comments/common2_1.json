{
    "energyml.common2_1.AbstractActivityParameter": "General parameter value used in one instance of activity",
    "energyml.common2_1.AbstractBooleanArray": "Generic representation of an array of Boolean values. Each derived element provides a specialized implementation to allow specific optimization of the representation. ",
    "energyml.common2_1.AbstractFloatingPointArray": "Generic representation of an array of double values. Each derived element provides specialized implementation to allow specific optimization of the representation.",
    "energyml.common2_1.AbstractIntegerArray": "Generic representation of an array of integer values. Each derived element provides specialized implementation to allow specific optimization of the representation.",
    "energyml.common2_1.AbstractMeasure": "The intended abstract supertype of all quantities that have a value with a unit of measure. The unit of measure is in the uom attribute of the subtypes. \n\nThis type allows all quantities to be profiled to be a 'float' instead of a 'double'.",
    "energyml.common2_1.AbstractObject": "The parent class for all top-level elements across the Energistics MLs. ",
    "energyml.common2_1.AbstractParameterKey": "Abstract class describing a key used to identify a parameter value. When multiple values are provided for a given parameter, provides a way to identify the parameter through its association with an object, a time index... ",
    "energyml.common2_1.AbstractString": "The intended abstract supertype of all strings. This abstract type allows the control over whitespace for all strings to be defined at a high level. This type should not be used directly except to derive another type.",
    "energyml.common2_1.AbstractTemperaturePressure": "The Abstract base type of standard pressure and temperature",
    "energyml.common2_1.AbstractValueArray": "Generic representation of an array of numeric, Boolean, and string values. Each derived element provides specialized implementation for specific content types or for optimization of the representation.",
    "energyml.common2_1.Activity": "Instance of a given activity",
    "energyml.common2_1.ActivityTemplate": "Description of one type of activity.",
    "energyml.common2_1.AxisOrder2d": "Defines the coordinate system axis order of the global CRS using the axis names (from EPSG database).",
    "energyml.common2_1.BooleanArrayFromIndexArray": "An array of Boolean values defined by specifying explicitly which indices in the array are either true or false. This class is used to represent very sparse true or false data.",
    "energyml.common2_1.BooleanConstantArray": "Represents an array of Boolean values where all values are identical. This an optimization for which an array of explicit Boolean values is not required. ",
    "energyml.common2_1.BooleanExternalArray": "Array of Boolean values provided explicitly by an HDF5 dataset.",
    "energyml.common2_1.Citation": "An ISO 19115 EIP-derived set of metadata attached to all specializations of AbstractObject to ensure the traceability of each individual independent (top level) element.",
    "energyml.common2_1.CustomData": "WITSML - Custom or User Defined Element and Attributes Component Schema.\n                                                Specify custom element, attributes, and types in the custom data area.",
    "energyml.common2_1.DataAssuranceRecord": "A little XML document describing whether or not a particular data object conforms with a pre-defined policy which consists of at least one rule.",
    "energyml.common2_1.DataObjectParameter": "Parameter referencing to a top level object.",
    "energyml.common2_1.DataObjectReference": "It only applies for Energistics data object.",
    "energyml.common2_1.DensityValue": "A possibly temperature and pressure corrected desity value.",
    "energyml.common2_1.DoubleQuantityParameter": "Parameter containing a double value.",
    "energyml.common2_1.EpcExternalPartReference": "It defines a proxy for external part of the EPC package. It must be used at least for external HDF parts.\n\nEach EpcExternalPartReference represents a single operating system file",
    "energyml.common2_1.ExistenceKind": "A list of lifecycle states like actual, required, planned, predicted, etc. These are used to qualify any top-level element (from Epicentre 2.1).",
    "energyml.common2_1.ExtensionNameValue": "WITSML - Extension values Schema. The intent is to allow standard WITSML \"named\" \nextensions without having to modify the schema. A client or server can ignore any name that it \ndoes not recognize but certain meta data is required in order to allow \ngeneric clients or servers to process the value.",
    "energyml.common2_1.FailingRule": "The FailingRule class holds summary information on which of the rules within a policy failed.",
    "energyml.common2_1.FloatingPointConstantArray": "Represents an array of double values where all values are identical. This an optimization for which an array of explicit double values is not required.",
    "energyml.common2_1.FloatingPointExternalArray": "An array of double values provided explicitly by an HDF5 dataset.\nBy convention, the null value is NaN.",
    "energyml.common2_1.FloatingPointLatticeArray": "Represents an array of doubles based on an origin and a multi-dimensional offset. The offset is based on a linearization of a multi-dimensional offset.\n\nIf count(i) is the number of elements in the dimension i and offset(i) is the offset in the dimension i, then:\nglobalOffsetInNDimension = startValue+ ni*offset(n) + n_1i*count(n)*offset(n-1) + .... + 0i*count(n)*count(n-1)*....count(1)*offset(0)",
    "energyml.common2_1.FlowRateValue": "A possibly temperature and pressure corrected flow rate value.",
    "energyml.common2_1.GenericMeasure": "A generic measure type.\nThis should not be used except in situations where the underlying class of data is \ncaptured elsewhere. For example, for a log curve.",
    "energyml.common2_1.GeochronologicalRank": "Qualifier for the geological time denoted by the GeochronologicalUnit: eon, era, epoch, etc.",
    "energyml.common2_1.GeodeticEpsgCrs": "This class contains the EPSG code for a geodetic CRS. ",
    "energyml.common2_1.GeodeticGmlCrs": "This is the Energistics encapsulation of the GeodeticCrs type from GML. ",
    "energyml.common2_1.GeodeticLocalAuthorityCrs": "This class contains a code for a geodetic CRS according to a local authority. This would be used in a case where a company or regulatory regime has chosen not to use EPSG codes.",
    "energyml.common2_1.GeodeticUnknownCrs": "This class is used in a case where the coordinate reference system is either unknown or is intentionally not being transferred.",
    "energyml.common2_1.GeodeticWktCrs": "ISO 19162-compliant well-known text for the Geodetic CRS.",
    "energyml.common2_1.GeologicTime": "This class is used to represent a time at several scales: \n\n\t- A mandatory and precise DateTime used to characterize a TimeStep in a TimeSeries\n\n\n\t- An optional Age Offset (corresponding to a geological event occurrence) in  years. This age offset must be positive when it represents a GeologicalEvent occurrence in the past. This Age Offset is not required to be positive, to allow for the case of simulating future geological events.  \n\n\nWhen geological time is used to represent a geological event cccurrence, the DateTime must be set by the software writer at a date no earlier than 01/01/1950. Any DateTime (even the creation DateTime of the instance) can be set in this attribute field.",
    "energyml.common2_1.IndexRange": "In the case that the ReferencedData is indexed and the conformance with the DataAssurance policy applies to a range within that index space, this class represents that range.\n\nThe elements are string types because the index could be of numerous data types, including integer, float and date.",
    "energyml.common2_1.IntegerArrayFromBooleanMaskArray": "One-dimensional array of integer values obtained from the true elements of the Boolean mask.",
    "energyml.common2_1.IntegerConstantArray": "Represents an array of integer values where all values are identical. This an optimization for which an array of explicit integer values is not required.",
    "energyml.common2_1.IntegerExternalArray": "Array of integer values provided explicitly by an HDF5 dataset. The null value must be  explicitly provided in the NullValue attribute of this class.",
    "energyml.common2_1.IntegerLatticeArray": "Represents an array of integers based on an origin and a multi-dimensional offset. The offset is based on a linearization of a multi-dimensional offset.\n\nIf count(i) is the number of elements in the dimension i and offset(i) is the offset in the dimension i, then:\nglobalOffsetInNDimension = startValue+ ni*offset(n) + n_1i*count(n)*offset(n-1) + .... + 0i*count(n)*count(n-1)*....count(1)*offset(0)",
    "energyml.common2_1.IntegerQuantityParameter": "Parameter containing an integer value.",
    "energyml.common2_1.IntegerRangeArray": "Defines an array as a range of integers. The range is defined by an initial value and a count defining the size of the range.",
    "energyml.common2_1.JaggedArray": "Data storage object for an array of variable length 1D sub-arrays. The jagged array object consists of these two arrays: \n\n\t- An aggregation of all the variable length sub-arrays into a single 1D array.   \n\t- The offsets into the single 1D array, given by the sum of all the sub-array lengths up to and including the current sub-array.  \n\nOften referred to as a \"list-of-lists\" or \"array-of-arrays\" construction.\n\nFor example to store the following three arrays as a jagged array:\n(a b c)\n(d e f g)\n(h)\nElements = (a b c d e f g h)\nCumulative Length = (3 7 8)",
    "energyml.common2_1.LithologyKind": "A description of minerals or accessories that constitute a fractional part of a lithology description",
    "energyml.common2_1.LithostratigraphicRank": "Specifies the unit of lithostratigraphy.",
    "energyml.common2_1.MatrixCementKind": "Lithology matrix/cement description. The list of standard values is contained in the WITSML enumValues.xml file.",
    "energyml.common2_1.MeasureClass": "Measure class values. The list of standard values is contained in the WITSML enumValues.xml file.",
    "energyml.common2_1.ObjectAlias": "Use this to create multiple aliases for any object instance. Note that an Authority is required for each alias.",
    "energyml.common2_1.ParameterTemplate": "Description of one parameter that participate in one type of activity.",
    "energyml.common2_1.ProjectedCrs": "This is the Energistics encapsulation of the ProjectedCrs type from GML.",
    "energyml.common2_1.ProjectedEpsgCrs": "This class contains the EPSG code for a projected CRS.",
    "energyml.common2_1.ProjectedGmlCrs": "This is the Energistics encapsulation of the ProjectedCrs type from GML. ",
    "energyml.common2_1.ProjectedLocalAuthorityCrs": "This class contains a code for a projected CRS according to a local authority. This would be used in a case where a company or regulatory regime has chosen not to use EPSG codes.",
    "energyml.common2_1.ProjectedUnknownCrs": "This class is used in a case where the coordinate reference system is either unknown or is intentionally not being transferred. In this case, the uom and AxisOrder need to be provided on the ProjectedCrs class.",
    "energyml.common2_1.ProjectedWktCrs": "ISO 19162-compliant well-known text for the projected CRS",
    "energyml.common2_1.PropertyKind": "Property kinds carry the semantics of property values. They are used to identify if the values are, for example, representing porosity, length, stress tensor, etc. Energistics provides a list of standard property kind that represent the basis for the commonly used properties in the E&P subsurface workflow.",
    "energyml.common2_1.PropertyKindDictionary": "This dictionary defines property kind which is intended to handle the requirements of the upstream oil and gas industry. ",
    "energyml.common2_1.ReferenceCondition": "Combinations of standard temperature and pressure including \"ambient\". The list of standard values is contained in the enumValuesProdml.xml file.",
    "energyml.common2_1.ReferencePressureKind": "ReferencePressureKind",
    "energyml.common2_1.ReferenceTemperaturePressure": "StdTempPress",
    "energyml.common2_1.StringConstantArray": "Represents an array of Boolean values where all values are identical. This an optimization for which an array of explicit Boolean values is not required. ",
    "energyml.common2_1.StringExternalArray": "Used to store explicit string values, i.e., values that are not double, boolean or integers. The datatype of the values will be identified by means of the HDF5 API.",
    "energyml.common2_1.StringParameter": "Parameter containing a string value.",
    "energyml.common2_1.TemperaturePressure": "temperature and pressure",
    "energyml.common2_1.TimeIndex": "Index into a time series. Used to specify time. (Not to be confused with time step.)",
    "energyml.common2_1.TimeIndexParameter": "Parameter containing a time index value.",
    "energyml.common2_1.TimeIndices": "Indices\ninto a time series. Used to specify time. (Not to be confused with time step.)",
    "energyml.common2_1.TimeSeries": "Stores an ordered list of times, for example, for time-dependent properties, geometries, or representations. It is used in conjunction with the time index to specify times for RESQML.",
    "energyml.common2_1.TimeSeriesParentage": "Indicates that a time series has the associated time series as a parent, i.e., that the series continues from the parent time series.",
    "energyml.common2_1.TimeZone": "A time zone conforming to the XSD:dateTime specification.",
    "energyml.common2_1.TypeEnum": "The intended abstract supertype of all enumerated \"types\". This abstract type allows the maximum length of a type enumeration to be centrally defined. This type should not be used directly except to derive another type. It should also be used for uncontrolled strings which are candidates to become enumerations at a future date.",
    "energyml.common2_1.UnitOfMeasure": "This is a list of the valid units of measure across all the measure classes. Its intended use is to ensure that a valid unit of measure string is used in cases where the measure class is not known in advance or is otherwise not explicitly modeled in the XML schema.",
    "energyml.common2_1.UnitOfMeasureExt": "A variant of UnitOfMeasure which has been extended to allow any user-defined unit of measure which follows an authority:unit pattern; the colon is mandatory.\n\nThis class is implemented in XML as a union between the list of valid units per the prevailing Energistics Units of Measure Specification and an XML pattern which mandates the central colon.",
    "energyml.common2_1.UnitlessMeasure": "A unitless measure is a measure which has no unit of measure symbol, but could be a real physical measurement. Examples would be pH, wire gauge (AWG and BWG) and shoe size.\n\nThis is different from a dimensionless measure which represents a ratio whose units of measure have cancelled each other. DImensionless measures can have units of measure (like ppm or %) or may not have a displayable unit of measure symbol (in which case the units symbol Euc is used in a data transfer).",
    "energyml.common2_1.UomEnum": "The intended abstract supertype of all \"units of measure\".\n\t\t\tThis abstract type allows the maximum length of a UOM enumeration to be centrally defined. \n\t\t\tThis type is abstract in the sense that it should not be used directly \n\t\t\texcept to derive another type.",
    "energyml.common2_1.VerticalCoordinateUom": "The units of measure that are valid for vertical gravity based coordinates (i.e., elevation or vertical depth).",
    "energyml.common2_1.VerticalEpsgCrs": "This class contains the EPSG code for a vertical CRS.",
    "energyml.common2_1.VerticalGmlCrs": "This is the Energistics encapsulation of the VerticalCrs type from GML. ",
    "energyml.common2_1.VerticalLocalAuthorityCrs": "This class contains a code for a vertical CRS according to a local authority. This would be used in a case where a company or regulatory regime has chosen not to use EPSG codes. ",
    "energyml.common2_1.VerticalUnknownCrs": "This class is used in a case where the coordinate reference system is either unknown or is intentionally not being transferred. In this case, the uom and Direction need to be provided on the VerticalCrs class.",
    "energyml.common2_1.VerticalWktCrs": "ISO 19162-compliant well-known text for the vertical CRS",
    "energyml.common2_1.VolumeValue": "A possibly temperature and pressure corrected volume value.",
    "energyml.common2_1.WellStatus": "These values represent the status of a well or wellbore.",
    "energyml.common2_1.WellboreDatumReference": "Reference location for the measured depth datum (MdDatum).\n\nThe type of local or permanent reference datum for vertical gravity based (i.e., elevation and vertical depth) and measured depth coordinates within the context of a well. This list includes local points (e.g., kelly bushing) used as a datum and vertical reference datums (e.g., mean sea level)."
}